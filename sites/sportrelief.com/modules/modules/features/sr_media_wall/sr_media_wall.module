<?php
/**
 * @file
 * Code for the SR Media Wall feature.
 */

include_once 'sr_media_wall.features.inc';


/**
 * Implements hook_menu().
 *
 * Sets up calls to drupal_get_form() for all our example cases.
 *
 * @see menu_example.module
 * @see menu_example_menu()
 */
function sr_media_wall_menu() {
  $items = array();

  $items['sr-media-wall/ajax/%/%'] = array(
    'title' => 'Media Wall Default',
    'page callback' => 'ajax_sr_media_wall',
    'delivery callback' => 'ajax_deliver',
    'theme callback' => 'ajax_base_page_theme',
    'page arguments' => array(2,3),
    // internal API call
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['sr-media-wall/ajax/%/%/%'] = array(
    'title' => 'Media Wall Terms',
    'page callback' => 'ajax_sr_media_wall',
    'delivery callback' => 'ajax_deliver',
    'theme callback' => 'ajax_base_page_theme',
    'page arguments' => array(2,3,4),
    // internal API call
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}


/**
 * Callback for link example.
 *
 * Takes different logic paths based on whether Javascript was enabled.
 * If $type == 'ajax', it tells this function that ajax.js has rewritten
 * the URL and thus we are doing an AJAX and can return an array of commands.
 *
 * @param $type
 *   Either 'normal' or 'touch. Type is simply the normal URL argument to this URL.
 *
 * @return
 *   If $type == 'ajax', returns an array of AJAX Commands.
 *   Otherwise, just returns the content, which will end up being a page.
 *
 * @ingroup ajax_example
 */
function ajax_sr_media_wall($type = 'normal',$page_number = 1, $term = NULL) {

  if (isset($page_number) && is_numeric($page_number) ) {

    // Manually adding this here to respond to HTTP get requests
    drupal_add_http_header('Cache-Control', 'public, max-age=' . variable_get('cache_lifetime', 300));

    // path in coming request
    $path = $type . "_" . $page_number;
    // cid (cache id)
    $cid = 'sr_media_wall:data_' . $path;
    $views_display = "block_2";

    $result = &drupal_static(__FUNCTION__);
    // Fetch from cache if available
    if ($cache = cache_get($cid)) {
        $result = $cache->data;
    }
    else {

      /*
        Normal Mediawall page split into 2 pages for phone. But we still want
        views page 1/2/3 etc returned so decrease page number here for phone only
      */
      if($type == "phone_touch" && $page_number > 0){
        $page_number--;
      }

      // Offset
      $limit = variable_get("sr_media_wall_limit", 8);

      // If touch device
      if($type == "touch" || $type == "phone_touch"){
        // If touch device halve the limit
        $limit = (floor($limit/2));
        // Change views display to touch version
        $views_display = "block_3";
      }

      $offset = ($page_number  - 1) * $limit;
      $offset = ( ($offset < 0 ) ? 0 : $offset);
      // We want the offset to be +1, because first item already on first page.
      $offset = $offset+1;

      // phone
      if($type == "phone_touch"){
        /*
          2 news items showing on phone, so increase offset here to so views fetches
          all news items starting withh offset of 2.
         */

        $offset++;
      }


      $view = views_get_view('media_wall');

      // If term argment is sent
      if(isset($term) && !is_null($term)){
        $view->set_arguments(array($term));
      }
      $view->set_display($views_display);
      $view->set_offset($offset);
      $view->set_items_per_page($limit);
      $output = "<h2 class='pane-title mw-latest-news'>" . t(variable_get("sr_media_wall_header", "Latest News")) . "</h2>\n\r";
      $output .= $view->preview();

      $selector = "#my-media-wall";
      // Ajax callback
      $commands = array();
      $commands[] = ajax_command_replace($selector, $output);
      $result = array('#type' => 'ajax', '#commands' => $commands);

      // cache $result only if user is anon. This is because
      // logged in users should always see upto date version
      if(user_is_anonymous()){
        cache_set($cid, $result, 'cache');
      }
    }

    return $result;

  }else {
    $output = t("No page number specified.");
    return $output;
  }
}

/**
 * Implements hook_preprocess_panels_pane()
 */

function sr_media_wall_preprocess_panels_pane(&$vars) {
  // If bean is in panel pane and is media wall bundle
  if(isset($vars['content']) && isset($vars['content']['bean']) ){
    foreach($vars as $beans => $content){
      if(is_array($content) && isset($content['bean'])){
        foreach($content['bean'] as $bean){
          if( $bean['#bundle'] == "media_wall" ){
            $path = drupal_get_path('module', 'sr_media_wall');
            $vars['content']['bean']['#attached'] = array(
              'js' => array(
                $path . '/js/sr_media_wall.js',
                array('type' => 'setting', 'data' => array('sr_media_wall' => array('path' => url('sr-media-wall/ajax')))),
              ),
              'css' =>array(
                $path . '/css/sr_media_wall.css',
              )
            );

          }
        }
      }
    }
  }
}
