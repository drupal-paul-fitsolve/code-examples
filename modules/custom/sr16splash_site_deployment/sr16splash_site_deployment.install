<?php

/**
 * @file
 * install file for sr16splash_site_deployment
 *
 * Holds hook_update_N implementations
 */

// This file was copied from RND15 meaning that the initial update functions
// are redundant.  All updates up to sr16splash_site_deployment_update_7014 should be
// ignored as these would not have been run.

/**
 * Disable magic module
 */
function sr16splash_site_deployment_update_7000() {
  $disable_modules = array(
    'magic',
  );
  module_disable($disable_modules);
}

/**
 * Enable menu attributes and sr16splash site interstitial
 */
function sr16splash_site_deployment_update_7001() {
  $enable_Modules = array(
    'menu_attributes',
    'sr16splash_site_interstitial',
  );
  module_enable($enable_Modules);
}

/**
 * Enable menu attributes and sr16splash site ESU
 */
function sr16splash_site_deployment_update_7002() {
  $enable_Modules = array(
    'sr16splash_site_esu',
  );
  module_enable($enable_Modules);
}

/**
 * Enable Required Video Modules
 */
function sr16splash_site_deployment_update_7003() {
  $enable_Modules = array(
    'sr16splash_site_media',
    'sr16splash_site_media_video',
    'sr16splash_site_page_manager_node',
  );
  module_enable($enable_Modules);
}

/**
 * Enable placeholder polyfill module
 */
function sr16splash_site_deployment_update_7004() {
  $enable_modules = array(
    'placeholder',
  );
  module_enable($enable_modules);
}

/**
 * Enable sr16splash competition module
 */
function sr16splash_site_deployment_update_7005() {
  $enable_modules = array(
    'sr16splash_competition',
  );
  module_enable($enable_modules);
}


/**
 * Enable sr16splash Site Vocabularies feature.
 */
function sr16splash_site_deployment_update_7006() {

    $enable_modules = array(
        'sr16splash_site_vocabularies',
    );
    module_enable($enable_modules);

}

/**
 * Enable sr16splash News articles feature.
 */
function sr16splash_site_deployment_update_7007() {

    $enable_modules = array(
        'sr16splash_site_news_article',
    );
    module_enable($enable_modules);

}

/**
 * Install RND Roles and Permissions.
 */
function sr16splash_site_deployment_update_7009() {

  include_once('sr16splash_site_deployment_roles_accounts.inc');

  // Create roles.
  $roles = sr16splash_site_deployment_get_roles_RED_1507();

  foreach ($roles as $role) {
    sr16splash_site_deployment_create_role($role);
  }

  // Remove roles.
  $remove = array('dasp-product-owner', 'administrator', 'Webform admin', 'qa',);
  foreach ($remove as $remove_this) {
    sr16splash_site_deployment_remove_role($remove_this);
  }

  // Deploy permissions to roles.
  $perms = sr16splash_site_deployment_get_role_perms_RED_1507();

  foreach ($perms as $perm => $role_group) {

    // Developers have all permissions.
    sr16splash_site_deployment_set_permission(RND_15_SITE_DEPLOYMENT_ROLE_DEVELOPER, $perm, TRUE);

    // First in array is page builder.
    sr16splash_site_deployment_set_permission($roles[1], $perm,
      in_array(RND_15_SITE_DEPLOYMENT_ROLE_PAGE_BUILDER, $role_group));

    // Second in array is content editor.
    sr16splash_site_deployment_set_permission($roles[2], $perm,
      in_array(RND_15_SITE_DEPLOYMENT_ROLE_CONTENT_EDITOR, $role_group));

    // We want to ensure that the default user has no permissions.
    sr16splash_site_deployment_set_permission(RND_15_SITE_DEPLOYMENT_ROLE_QA, $perm, FALSE);

  }

  // Special case - authenticated user needs to be able to see content.
  sr16splash_site_deployment_set_permission(RND_15_SITE_DEPLOYMENT_ROLE_QA, 'access content', TRUE);

  // Set users roles
  $users = sr16splash_site_deployment_get_users_RED_1507();

  foreach ($users as $user => $roles) {

    // Ensure user exists first.
    sr16splash_site_deployment_create_user($user, $user . '@comicrelief.com');

    // Set the user roles.
    sr16splash_site_deployment_set_roles($user . '@comicrelief.com', $roles);
  }

  // Now do special qa accounts.
  // The accounts by role.
  $roles = sr16splash_site_deployment_get_roles_RED_1507();

  foreach ($roles as $role) {
    $user = 'qa-' . str_replace(' ', '-', $role);
    $email = $user . '@comicrelief.com';
    // The QA password will be qa-role&2
    sr16splash_site_deployment_create_user($user, $email, $user . '&2');
    sr16splash_site_deployment_set_roles($user . '@comicrelief.com', array($role));
  }
}

/**
 * Enable sr16splash DataTalk Site Tracking Module
 */
function sr16splash_site_deployment_update_7010() {

    $enable_modules = array(
        'cr_tracking_datatalk',
    );
    module_enable($enable_modules);

}

/**
 * Disable unused modules.
 */
function sr16splash_site_deployment_update_7011() {

  // Determine environment.
  $env = getenv('AH_SITE_ENVIRONMENT');

  $disable = array();
  if (in_array($env, array('staging', 'cam-staging', 'uat', 'cam-uat', 'production', 'cam-production'))) {
    $disable = array(
      'devel',
    );
  }
  $disable = array_merge($disable, array('views_slideshow', 'contact', 'dashboard', 'logo_block', 'styleguide',
    'delta_blocks', 'node_embed', 'shortcut', 'cr_fb_share'));

  module_disable($disable);

}

/**
 * Assign Varnish invalidation perms to roles
 */
function sr16splash_site_deployment_update_7012() {
  $enable_modules = array('cr_invalidate_varnish');
  module_enable($enable_modules);

  $roles_perms = array(
    RND_15_SITE_DEPLOYMENT_ROLE_DEVELOPER => array(
      'configure varnish invalidation',
      'invalidate urls in varnish',
    ),
    RND_15_SITE_DEPLOYMENT_ROLE_CONTENT_EDITOR => array(
      'invalidate urls in varnish',
    ),
    RND_15_SITE_DEPLOYMENT_ROLE_PAGE_BUILDER => array(
      'invalidate urls in varnish',
    ),
  );

  foreach ($roles_perms as $role => $perms) {
    foreach ($perms as $perm) {
      sr16splash_site_deployment_set_permission($role, $perm, TRUE);
    }
  }
}

/**
 * Enable context_error Module
 */
function sr16splash_site_deployment_update_7013() {

  $enable_modules = array(
    'context_error',
  );
  module_enable($enable_modules);

}

/**
 * Disable Mini Panel Block Support
 */
function sr16splash_site_deployment_update_7014() {

  variable_set('panels_mini_block_support', 0);

}

// All update_N hooks up to this point will not have been run on sr16splash
// They exist as the file was copied across from RND15

/**
 * Enable sr16splash_kit_preorder module
 */
function sr16splash_site_deployment_update_7015() {
  $enable_modules = array(
    'sr16splash_kit_preorder',
  );
  module_enable($enable_modules);
}

/**
 * Enable sr16splash_register_interest module
 */
function sr16splash_site_deployment_update_7016() {
  $enable_modules = array(
    'sr16splash_register_interest',
  );
  module_enable($enable_modules);
}
