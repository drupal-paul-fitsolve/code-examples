AP: 12/01/15
-----------

The Pane Filter module provides the Drupal JS behaviour required to filter Panel Panes by a set of dynamic terms, utilising the 'data attribute' pane style plug-in to effectively 'tag' a pane with a certain filterable value.

http://confluence.comicrelief.com/display/rnd15EditorDocumentation/How+to+setup+a+Pane+Filter


Process - Setting up a Pane Filter:
--------

1) Add 2 text panes to the first region of a new minipanel; one for the filter label, one for the buttons themselves. Apply these
custom classves via the Pane style plugin:

- pane-filter-group-description
- pane-filter-group-buttons

Add some grid classes for good measure, these values are for the Schools page/s:

 - description: xs:12, sm:inherit, md:3, lg:inherit
 - buttons: xs:12, sm:inherit, md:9, lg:inherit


2) Markup for the description pane
<span class="type--semibold">Step 1.</span>
<span>Filter by age group</span>


3) Define your filters in the second text pane and use the following markup:

<a href="" class="btn btn-grey filter__button" data-filter-group="schools" data-filter-value="all">all</a>
<a href="" class="btn btn-grey filter__button" data-filter-group="schools" data-filter-value="nursery">nursery</a>
<a href="" class="btn btn-grey filter__button" data-filter-group="schools" data-filter-value="primary">primary</a>
<a href="" class="btn btn-grey filter__button" data-filter-group="schools" data-filter-value="secondary">secondary</a>

As well as the specific classes, each button needs two data attributes as shown; 'data-filter-group' and 'data-filter-value'. The 'group' attribute defines which filter group the button belongs to, the 'value' attribute defines what that button will be assigning to the group.

The href attribute is left empty as the URLs are automatically generated by the Javascript, which will reflect the current filter settings so that the
employed History.js plug-in can used fully. The button text wrapped by the anchor can be whatever you like as this is not used at all.

The first button in the above example resets it's own filter group with the 'all' value. This value is hardcoded in the JS ('dataFilterResetSelector'), so needs to be used in order to reset the filter.


Process - Setting up filterable panes:
--------

1) Create a new minipanel- the first region will house all of our content.

2) Start adding the tools (or other panes/minipanels) you wish to filter to this section. Apply the Pane style plug-in, and use the Data Attributes fields to determine what filter settings will hide this pane. Using the previous example filter, you could add something like the following:

- "Attribute name - data-{name}": data-filter-schools
- "A space-separated list of values": nursery

This would mean this pane would be shown when our "schools" filter group above is set to "nursery". Easy. If you're using multiple filters, just add another name/value data attribute pair in this plugin, eg:

- "Attribute name - data-{name}": data-filter-tools
- "A space-separated list of values": video

This settings obviously need to match up with the options available in the filter/s we've already defined.


Process - Setting up the page
--------

1) Add these mini panels into the same template region on your page

2) To this region, add the 'pane-filter-section' class via the Section style plug-in "Custom classes for <section>" field 

3) Add the 'pane-filter-group' class to each filter group pane via the Pane style plug-in "Custom classes" field

4) Finally, add the 'pane-filter-content' class to the filterable content pane via the Pane style plug-in "Custom classes" field