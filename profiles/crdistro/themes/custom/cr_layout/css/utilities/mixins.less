/**
 * @file
 * Contains helper mixins for common styles or patterns.
 */

@base-font-size: 13;

.font-size( @value: @base-size, @context: @base-font-size ) {
  font-size: (@value / @context) + 0em;
}

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF, @background: none) {
  background: @color @background;
  background: @background,
              -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
  background: @background,
              -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
  background: @background,
              -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
  background: @background,
              -o-linear-gradient(@start,
                                   @stop);
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{stop}', endColorstr='@{start}');
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{stop}', endColorstr='@{start}');
  /*todo: how to add seperate gradient class for ie9 htc fix?: http://abouthalf.com/2011/10/04/updated-ie9-gradients-with-rounded-corners/ */
}

.border-radius(@arguements) {
  border-radius: @arguements;
  -moz-border-radius: @arguements;
  -webkit-border-radius: @arguements;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
.opacity(@opacity) {
  @ieOpacity: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ieOpacity})"; // IE 8
  opacity: @opacity;
}
.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}
.translate(@x:0, @y:0) {
  -moz-transform: translate(@x, @y);
  -webkit-transform: translate(@x, @y);
  -o-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  transform: translate(@x, @y);
}
.box-sizing(@arg) {
  -webkit-box-sizing: @arg;
  -moz-box-sizing: @arg;
  -o-box-sizing: @arg;
  box-sizing: @arg;
}
.background-size(@arg) {
  -webkit-background-size: @arg;
  -moz-background-size: @arg;
  -o-background-size: @arg;
  background-size: @arg;
}
.transition(@duration:0.2s, @ease:ease-out, @property:all) {
  -webkit-transition: @property @duration @ease;
  -moz-transition: @property @duration @ease;
  -o-transition: @property @duration @ease;
  -ms-transition: @property @duration @ease;
  transition: @property @duration @ease;
}

/* -- animation helpers */
.animation(@args) {
  -webkit-animation: @args;
    -moz-animation: @args;
      -o-animation: @args;
        animation: @args;
}
.animation-duration(@args) {
  -webkit-animation-duration: @args;
    -moz-animation-duration: @args;
      -o-animation-duration: @args;
        animation-duration: @args;
}
.animation-fill-mode(@args) {
  -webkit-animation-fill-mode: @args;
    -moz-animation-fill-mode: @args;
      -o-animation-fill-mode: @args;
        animation-fill-mode: @args;
}
.animation-timing-function(@args) {
  -webkit-animation-timing-function: @args;
    -moz-animation-timing-function: @args;
      -o-animation-timing-function: @args;
        animation-timing-function: @args;
}
.animation-transform-origin(@args) {
  -webkit-transform-origin: @args;
    -moz-transform-origin: @args;
      -o-transform-origin: @args;
        transform-origin: @args;
}
.animation-name(@args) {
  -webkit-animation-name: @args;
      -moz-animation-name: @args;
        -o-animation-name: @args;
          animation-name: @args;
}
.animation-iteration-count(@arg) {
  -webkit-animation-iteration-count: @arg;
    -moz-animation-iteration-count: @arg;
      -o-animation-iteration-count: @arg;
        animation-iteration-count: @arg;
}
/* Calculates fluid width gap in narrow-mobile less
 * We're not calculating margins outside of columns
 * Gaps are always columns minus 1 e.g. 6 cols has 5 gaps.
 * Each gap is 1%
 * Calculate total gap - 100% and divide that by columns
 */ 
.fluid-grid-width(@grid) {
  @cols: (24 / @grid);
  @gapstotal: ((@cols - 1) * 2);
  @width: ((100 - @gapstotal) / @cols);
  width: @width + 0%;
}